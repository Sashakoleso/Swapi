{"version":3,"sources":["pages/HomePage/Home.module.css","pages/Loader/Loader.module.css","pages/Loader/Loader.js","services/api.js","pages/SearchBar/SearchBar.js","pages/HomePage/HomePage.js","routes.js","pages/MovieDetailsPage/MovieDetailsPage.js","pages/NotFound/NotFound.js","App.js","index.js"],"names":["module","exports","Loader","className","styles","loader","type","color","height","width","BASE_URL","allFilms","axios","get","SearchBar","state","search","handleChange","e","setState","target","value","handleSubmit","preventDefault","onSubmit","props","this","style","marginTop","display","alignItems","flexDirection","onChange","marginBottom","backgroundColor","fontSize","Component","mapper","films","map","id","episode_id","HomePage","isLoading","API","then","data","results","catch","console","log","finally","background","mainList","title","key","mainTitleStyle","to","MovieDetailsPage","filmData","planetsName","match","params","planets","forEach","url","ps","name","error","crawl","opening_crawl","director","producer","release","release_date","margin","textAlign","border","paddingTop","padding","el","NotFoundPage","routes","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0b7eee51.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainList\":\"Home_mainList__3wvbD\",\"mainTitleStyle\":\"Home_mainTitleStyle__Y-bQ9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__m2oL3\"};","import React from 'react';\nimport LoaderComponent from 'react-loader-spinner';\nimport styles from './Loader.module.css';\n\nconst Loader = () => {\n  return (\n    <div className={styles.loader}>\n      <LoaderComponent\n        type=\"BallTriangle\"\n        color=\"grey\"\n        height={100}\n        width={100}\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://swapi.co/api/';\n/* eslint-disable-next-line */\nexport const allFilms = () => axios.get(`${BASE_URL}films`);\nexport const getFilmByID = id => axios.get(`${BASE_URL}films/${id}`);\nexport const searchFilms = title =>\n  axios.get(`${BASE_URL}films/?search=${title}`);\nexport const planetsForFilm = url => axios.get(url);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass SearchBar extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    search: '',\n  };\n\n  handleChange = e => {\n    this.setState({ search: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { onSubmit } = this.props;\n    const { value } = this.state;\n    onSubmit(value);\n    this.setState({ search: '' });\n  };\n\n  render() {\n    const { search } = this.state;\n    return (\n      <form\n        style={{\n          marginTop: '50px',\n          display: 'flex',\n          alignItems: 'center',\n          flexDirection: 'column',\n        }}\n        onChange={this.handleChange}\n      >\n        <input\n          style={{ width: '300px', height: '30px', marginBottom: '10px' }}\n          value={search}\n          onChange={this.handleChange}\n          type=\"text\"\n        />\n        <button\n          style={{\n            backgroundColor: 'red',\n            width: '70px',\n            height: '30px',\n            fontSize: '18px',\n          }}\n          type=\"submit\"\n        >\n          Search\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default SearchBar;\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Loader from '../Loader/Loader';\nimport * as API from '../../services/api';\nimport SearchBar from '../SearchBar/SearchBar';\nimport styles from './Home.module.css';\n\nconst mapper = films => {\n  return films.map(({ episode_id: id, ...props }) => ({\n    id,\n    ...props,\n  }));\n};\n\nexport default class HomePage extends Component {\n  state = {\n    films: [],\n    isLoading: false,\n  };\n\n  componentDidMount() {\n    this.allFilms();\n  }\n\n  allFilms = search => {\n    this.setState({ isLoading: true });\n\n    API.allFilms(search)\n      .then(({ data }) => this.setState({ films: mapper(data.results) }))\n      .catch(console.log)\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  render() {\n    const { films, isLoading } = this.state;\n    return (\n      <div\n        style={{\n          background: 'https://wallpapercave.com/wp/wp2902991.jpg',\n        }}\n      >\n        {isLoading && <Loader />}\n        <SearchBar onSubmit={this.allFilms} />\n        <ul className={styles.mainList}>\n          {films.map(({ title, id }) => (\n            <li key={id} className={styles.mainTitleStyle}>\n              <Link to={`/films/${id}`}>{title}</Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","export default {\n  HOME: '/',\n  MOVIES_DETAILS: '/films/:id',\n};\n","/* eslint-disable no-shadow */\n/* eslint-disable react/destructuring-assignment */\nimport React, { Component } from 'react';\nimport Proppes from 'prop-types';\nimport * as API from '../../services/api';\n\nexport default class MovieDetailsPage extends Component {\n  static propTypes = {\n    match: Proppes.shape({\n      params: Proppes.shape({}.isRequired),\n    }).isRequired,\n  };\n\n  state = {\n    filmData: {},\n    planetsName: [],\n  };\n\n  componentDidMount() {\n    const { match } = this.props;\n\n    API.getFilmByID(match.params.id)\n      .then(({ data }) => {\n        const { planets: urlPlanets } = data;\n        urlPlanets.forEach(url => {\n          API.planetsForFilm(url)\n            .then(({ data }) => {\n              this.setState(ps => ({\n                planetsName: [...ps.planetsName, data.name],\n              }));\n            })\n            .catch(console.error);\n        });\n\n        this.setState({ filmData: data });\n      })\n      .catch(console.error);\n  }\n\n  render() {\n    const {\n      title,\n      opening_crawl: crawl,\n      director,\n      producer,\n      release_date: release,\n    } = this.state.filmData;\n\n    const planets = this.state.planetsName;\n\n    return (\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          margin: '0 auto',\n          alignItems: 'center',\n          textAlign: 'center',\n          backgroundColor: 'lightGrey',\n          width: '900px',\n          marginTop: '50px',\n          border: '2px solid black',\n        }}\n      >\n        {planets && (\n          <>\n            <h1\n              style={{\n                color: 'blue',\n                paddingTop: '20px',\n              }}\n            >\n              {title}\n            </h1>\n            <h3\n              style={{\n                color: 'red',\n                paddingTop: '20px',\n              }}\n            >\n              {crawl}\n            </h3>\n            <p\n              style={{\n                paddingTop: '20px',\n              }}\n            >\n              Director: {director}\n            </p>\n            <p\n              style={{\n                paddingTop: '20px',\n              }}\n            >\n              Producer: {producer}\n            </p>\n            <p\n              style={{\n                padding: '20px 0 20px 0',\n              }}\n            >\n              Release date: {release}\n            </p>\n            {planets.map(el => (\n              <span key={el}>Planet: {el}</span>\n            ))}\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport routes from '../../routes';\n\nconst NotFoundPage = () => {\n  return (\n    <div>\n      <h2>Такая страница не найдена</h2>\n      <p>\n        Вот наша домашняя страница: <NavLink to={routes.HOME}> дом</NavLink>\n      </p>\n    </div>\n  );\n};\n\nexport default NotFoundPage;\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport HomePage from './pages/HomePage/HomePage';\nimport routes from './routes';\nimport MovieDetailsPage from './pages/MovieDetailsPage/MovieDetailsPage';\nimport NotFoundPage from './pages/NotFound/NotFound';\n\nclass App extends Component {\n  state = {};\n\n  render() {\n    return (\n      <>\n        <Switch>\n          <Route exact path={routes.HOME} component={HomePage} />\n          <Route\n            exact\n            path={routes.MOVIES_DETAILS}\n            component={MovieDetailsPage}\n          />\n          <Route component={NotFoundPage} />\n        </Switch>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}